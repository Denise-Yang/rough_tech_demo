using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;



public class DialogueManager : MonoBehaviour
{
    public Text nameText;
    public Text dialogueText;
    public InputField priceField;
    public int playerPrice;

    public ObjectDisplay objDis;

    private string[] lines; // opening lines

    public List<GameObject> customers;
    public int customerNum;
    private int pick;

    public GameObject item_list;
    public GameObject customer_list;

    private Item curr_item;
    private Customer curr_cust;

    private bool startedConvo = false;

    //public GameObject pricePoint; // function that gets value of customer price range
    private int upperBound;
    private int desiredPrice;

    public int maxCustomers;
    private int numCustomers;
    //have customer max, check at end.


    public void StartDialogue()
    {
        if (startedConvo == false && numCustomers < maxCustomers)
        {

            Debug.Log("starting dialogue");
            curr_item = item_list.GetComponent<ItemList>().ItemCreator();  //Make this based on the item list at some point;
            curr_cust = customer_list.GetComponent<CustomerList>().CustomerCreator(curr_item);
           // dialogueText.dialogue = curr_cust.dialogue;
            
            nameText.text = curr_cust.dialogue.name;
            lines = curr_cust.dialogue.lines;
            dialogueText.text = lines[0];
            startedConvo = true;
        }
        if (numCustomers >= maxCustomers) {
            dialogueText.text = "Game over!";
        }
    }

   public void DisplayNext()
  {
        if (startedConvo == true)
        {
            Debug.Log("in dialogue");
            playerPrice = int.Parse(priceField.text); //assume user inputs int
            int outcome = curr_cust.offerAccepted(playerPrice);
            if (outcome == 0) {  //No deal, counteroffer
                double counter = curr_cust.counterOffer(playerPrice);
                dialogueText.text = lines[2] + " " + (int)counter + " instead?";
            } else if (outcome == 1) {   //deal
                Debug.Log("DEAL!");
                dialogueText.text = lines[3];
                EndDialogue();
            } else if (outcome == 2) {   // walk away
                Debug.Log("Walk away fustration");
                dialogueText.text = lines[4];
                EndDialogue();
            }
        }
            /*desiredPrice = 10; //desiredPrice = pricePoint.calcIdeal(price)
            upperBound = 50; //upperBound = pricePoint.findPrice(price)

            if (frustration > 10)
            {
                dialogueText.text = lines[4]; //leave
                EndDialogue();
            }

            else if (price <= desiredPrice) //values should be changed to depending on the bounds generated by the function
            {
                dialogueText.text = lines[3]; //accept
                EndDialogue();

            }
            else if (desiredPrice < price && price < upperBound)
            {
                //desiredPrice = pricePoint.calcIdeal(price)
                dialogueText.text = lines[2] + " " + desiredPrice + " instead?"; //counter
                frustration++;
            }
            else if (upperBound <= price)
            {
                frustration += 5;
                dialogueText.text = lines[1]; //threat
            }
        }*/
  }

  void EndDialogue()
  {
    numCustomers++;
    item_list.GetComponent<ItemList>().DestroyItemGO();
    customer_list.GetComponent<CustomerList>().DestroyCustomerGO();
    
    //Supposedly garbage collection will then delete them if nothing is pointing to them
    curr_cust = null;
    curr_item = null;

    startedConvo = false;
    Debug.Log("End");
  }

}
